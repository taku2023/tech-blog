@use "_variable" as v;

@function get-size($size-name: mobile) {
  @return map-get(v.$responsive, $size-name);
}

@mixin modify {
  @each $size-name, $map in v.$sizes {
    $size-map: () !global;
    @each $key, $submap in $map {
      $value: map-get(map-get(v.$sizes, $size-name), $key);
      $size-map: map-merge(
        $size-map,
        (
          $key: $value,
        )
      ) !global;
      @media (min-width: map-get(get-size($size-name),min)) {
        @content;
      }
      $size-map: null !global;
    }
  }
}

@function size($key) {
  @return map-get($size-map, $key);
}

@mixin is-($name) {
  @media (min-width: map-get(get-size($name),min)) {
    @content;
  }
}

@mixin within($name) {
  @media (min-width: map-get(get-size($name),min)) and (max-width: map-get(get-size($name),max)) {
    @content;
  }
}

@each $name, $size in v.$responsive {
  .is-#{$name} {
    @media (max-width: calc(map-get(get-size($name),min) - 1px)) {
      display: none !important;
    }
  }
  //exclusive is-#{$name}
  //shorthand logical not .is-#{$name}
  .not-#{$name} {
    @media (min-width: map-get(get-size($name),min)) {
      display: none !important;
    }
  }
}
